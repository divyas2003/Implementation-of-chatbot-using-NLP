from flask import Flask, request, jsonify
from transformers import pipeline, set_seed

# Initialize Flask app
app = Flask(__name__)

# Initialize the NLP model for chatbot responses
set_seed(42)
chatbot_pipeline = pipeline("text-generation", model="gpt2")

@app.route("/")
def home():
    return "Chatbot API is running!"

@app.route("/chat", methods=["POST"])
def chat():
    user_message = request.json.get("message")
    if not user_message:
        return jsonify({"error": "Message is required"}), 400
    
    # Generate a response using the NLP pipeline
    response = chatbot_pipeline(
        f"User: {user_message}\nChatbot:",
        max_length=50,
        num_return_sequences=1,
        pad_token_id=50256  # For GPT-2
    )[0]["generated_text"]
    
    # Extract the Chatbot's reply (after 'Chatbot:')
    chatbot_reply = response.split("Chatbot:")[1].strip()
    return jsonify({"user_message": user_message, "chatbot_reply": chatbot_reply})

if __name__ == "__main__":
    app.run(port=5000)
How to Use
1.	Run the Code: Save the code as chatbot.py and run it.
2.	python chatbot.py
3.	Send a POST Request: You can use tools like Postman or curl to send a POST request to the /chat endpoint with a JSON payload.
Example:
4.	curl -X POST -H "Content-Type: application/json" \
5.	-d '{"message": "Hello, how are you?"}' \
6.	http://127.0.0.1:5000/chat
7.	Output: The chatbot will generate a response based on the input message using the GPT-2 model.
